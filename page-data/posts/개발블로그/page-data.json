{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/개발블로그","result":{"pageContext":{"currentCategory":"개발블로그","categories":["All","개발블로그"],"edges":[{"node":{"id":"32f75736-964c-5606-bc82-02e20942c129","excerpt":"정참조와 역참조 객체 서로 호출하기 데이터베이스에서 두 테이블이 참조 관계에 있는 경우를 생각해보자. 예를 들어,  테이블과 사용자의 직업인  테이블이 있다. 두 테이블은 N:1 관계에 있으며,  객체가  객체를 참조하고 있다.  가  을 선택하여 입사 원서를 작성한다고 가정해보자.  객체는  객체를 정참조 하고 있으므로, 속성 이름으로 바로 접근 할 수 있다. User1을 선택하여, 그 사람의 job을 찾아보자. 그러나  객체는  객체를 역참조 하고 있으므로 바로 접근이 불가능하다.  이라는 을 가지고 있는 유저를 모두 찾아보자. ❌ 안 됨 ❌ 그렇다고 절대로 사용하지 못하는 것은 절대 아니니 걱정하지말자. 역참조 관계에 있을 때는  이라는 속성을 사용하여 접근해야한다. 이 때,  대신 사용할 수 있는 것이 이다. 역참조 대상인  객체를 부를 이름. 즉,  클래스를 정의할 때, 정참조 하고 있는  클래스의 인스턴스에서 어떤 명칭으로 거꾸로 호출당할 지 정해주는 이름인 것이다. W…","fields":{"slug":"/blog-20210614-Django-Related_name/"},"frontmatter":{"categories":"개발블로그","title":"Django과 Reverse relation과 related_name","date":"June 14, 2020"}},"next":null,"previous":null}]}},"staticQueryHashes":["1073350324","2938748437"]}