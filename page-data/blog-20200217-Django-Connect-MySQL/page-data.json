{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog-20200217-Django-Connect-MySQL/","result":{"data":{"cur":{"id":"d966eff6-89e9-59de-b7a5-1c82bc703b2a","html":"<p>Django에서는 기본 데이터 베이스로 sqlite3를 제공해준다. setting.py 파일을 보면 sqlite3에 대한 설정을 확인할 수 있다. 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">DATABASES <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'ENGINE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'django.db.backends.sqlite3'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'NAME'</span><span class=\"token punctuation\">:</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'db.sqlite3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>나는 앞으로 MySQL을 사용할 것이기 때문에, 이 기본 정보를 바꾸고 Django-MySQL 조합을 완성하려 한다.</p>\n<hr>\n<h3 id=\"우분투-mysql-설치\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%B6%84%ED%88%AC-mysql-%EC%84%A4%EC%B9%98\" aria-label=\"우분투 mysql 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우분투 MySQL 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> -y mysql-server\n$ <span class=\"token function\">sudo</span> mysql_secure_installation\n<span class=\"token punctuation\">[</span>NO<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>최고관리자 password<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>Y:익명 사용자 제거<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>N:외부 로그인 허용<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>Y:테스트 데이터베이스 삭제<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>Y:privilege table 다시 로드<span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"환경-구성\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1\" aria-label=\"환경 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 구성</h3>\n<p>django가 설치되어 있는 가상환경을 활성화한 뒤, <code class=\"language-text\">mysqlclient</code>를 설치한다. 이 라이브러리를 활용하여 연동할 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> mysqlclient</code></pre></div>\n<h5 id=\"우분투에서-mysqlclient-설치시-오류가-발생한다면\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C-mysqlclient-%EC%84%A4%EC%B9%98%EC%8B%9C-%EC%98%A4%EB%A5%98%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%9C%EB%8B%A4%EB%A9%B4\" aria-label=\"우분투에서 mysqlclient 설치시 오류가 발생한다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우분투에서 mysqlclient 설치시 오류가 발생한다면,</h5>\n<p style=\"background-color:pink; padding:5px\">Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-zbw18e9_/mysqlclient/  </p>\n<p>이런 에러.<br>\n또는,</p>\n<p style=\"background-color:pink; padding:5px\">/bin/sh: 1: mysql_config: not found  </p>\n<p>이런 에러.<br>\n이때,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libmysqlclient-dev</code></pre></div>\n<p>다시</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> mysqlclient</code></pre></div>\n<h3 id=\"mysql에-데이터베이스-생성\" style=\"position:relative;\"><a href=\"#mysql%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"mysql에 데이터베이스 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL에 데이터베이스 생성</h3>\n<p>현재 프로젝트에서 이용할 데이터베이스를 MySQL 내부에 만들어주자. starbucks 라는 데이터 베이스를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">mysql<span class=\"token operator\">></span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> starbucks <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> utf8mb4 <span class=\"token keyword\">collate</span> utf8mb4_general_ci<span class=\"token punctuation\">;</span>\nQuery OK<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token keyword\">row</span> affected <span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span> sec<span class=\"token punctuation\">)</span></code></pre></div>\n<p>character set utf8mb4 - 한글 사용 활성화</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">mysql<span class=\"token operator\">></span> <span class=\"token keyword\">use</span> starbucks\n<span class=\"token keyword\">Database</span> changed\nmysql<span class=\"token operator\">></span> <span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span><span class=\"token punctuation\">;</span>\nEmpty <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></code></pre></div>\n<p>지금은 아무 테이블도 없지만, 앞으로 이것 저것 넣으면 된다.</p>\n<h5 id=\"-데이터베이스-삭제하려면\" style=\"position:relative;\"><a href=\"#-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%82%AD%EC%A0%9C%ED%95%98%EB%A0%A4%EB%A9%B4\" aria-label=\" 데이터베이스 삭제하려면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❔ 데이터베이스 삭제하려면</h5>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DROP DATABASE &lt;database_name></code></pre></div>\n<h3 id=\"django-mysql-연동\" style=\"position:relative;\"><a href=\"#django-mysql-%EC%97%B0%EB%8F%99\" aria-label=\"django mysql 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django-MySQL 연동</h3>\n<p>여태 settings.py에 모든 정보를 몰아서 저장했지만, 지금부터는 my_settings.py라는 새로운 파일에 민감한 정보들을 따로 저장해두고, settings.py에서 import 해서 사용할 것이다.</p>\n<blockquote>\n<p class=\"quote\" style=\"max-width: 100%; padding:10px; border-left:solid 3px gray; text-align:left\"> my_settings.py 파일은 외부와 공유할 일이 없는 정보이기 때문에 .gitignore이라는 숨김 파일에 이름을 등록하여 github에 업로드 되지 않도록 만들어야 한다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> my_settings.py</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">DATABASES <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'default'</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'ENGINE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'django.db.backends.mysql'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'NAME'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'starbucks'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'USER'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'PASSWORD'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'HOST'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'PORT'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3306'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">my_settings.py</code>파일이 완성되었다. 그럼 진짜 <code class=\"language-text\">setting.py</code>파일에서 import하러 가자!</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> settings.py</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> my_settings\n\nDATABASES <span class=\"token operator\">=</span> my_settings<span class=\"token punctuation\">.</span>DATABASES</code></pre></div>\n<p>모든 설정을 수정하였다면 데이터베이스에 테이블을 만들어줘야한다. <code class=\"language-text\">./manage.py migrate</code></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">mysql<span class=\"token operator\">></span> <span class=\"token keyword\">use</span> starbucks\nmysql<span class=\"token operator\">></span> <span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">장고_어쩌구</code> 세 테이블과, 내가 starbucks_menu.models에 만들어 둔 클래스에 해당하는 표들이 보인다.</p>\n<hr>\n<p>이제 쓰면 된다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9A%B0%EB%B6%84%ED%88%AC-mysql-%EC%84%A4%EC%B9%98\">우분투 MySQL 설치</a></li>\n<li>\n<p><a href=\"#%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1\">환경 구성</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C-mysqlclient-%EC%84%A4%EC%B9%98%EC%8B%9C-%EC%98%A4%EB%A5%98%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%9C%EB%8B%A4%EB%A9%B4\">우분투에서 mysqlclient 설치시 오류가 발생한다면,</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mysql%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\">MySQL에 데이터베이스 생성</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%82%AD%EC%A0%9C%ED%95%98%EB%A0%A4%EB%A9%B4\">❔ 데이터베이스 삭제하려면</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#django-mysql-%EC%97%B0%EB%8F%99\">Django-MySQL 연동</a></li>\n</ul>\n</div>","excerpt":"Django에서는 기본 데이터 베이스로 sqlite3를 제공해준다. setting.py 파일을 보면 sqlite3에 대한 설정을 확인할 수 있다. 아래와 같다. 나는 앞으로 MySQL을 사용할 것이기 때문에, 이 기본 정보를 바꾸고 Django-MySQL 조합을 완성하려 한다. 우분투 MySQL 설치 환경 구성 django가 설치되어 있는 가상환경을 활성화한 뒤, 를 설치한다. 이 라이브러리를 활용하여 연동할 것이다. 우분투에서 mysqlclient 설치시 오류가 발생한다면, 이런 에러. 또는, 이런 에러. 이때, 다시 MySQL에 데이터베이스 생성 현재 프로젝트에서 이용할 데이터베이스를 MySQL 내부에 만들어주자. starbucks 라는 데이터 베이스를 생성한다. character set utf8mb4 - 한글 사용 활성화 지금은 아무 테이블도 없지만, 앞으로 이것 저것 넣으면 된다. ❔ 데이터베이스 삭제하려면 Django-MySQL 연동 여태 settings.py에 모든 정보…","frontmatter":{"date":"February 17, 2020","title":"Django에 MySQL 연결하여 데이터 저장하기","categories":"개발블로그","author":"이소헌","emoji":"👑"},"fields":{"slug":"/blog-20200217-Django-Connect-MySQL/"}},"next":null,"prev":{"id":"7df99284-96e3-5b5e-86a2-b294951ef2d7","html":"<p>파이썬으로 다양한 객체들을 다루다보면 종종 <code class=\"language-text\">with open</code>을 사용한다.<br>\n특히 파일을 열 때 유용하게 사용하는데, 텍스트(.txt) 파일을 활용하여 작업할 때는 물론이며 음악 파일을 다룰 때에도 어김없이 등장한다.</p>\n<ul>\n<li><a style=\"color:orange; text-decoration:none; font-weight:800\" href='https://soheon-lee.github.io/blog-20200315-Django-Streaming-Part1/'> Django로 음악 스트리밍하기 PART1</a></li>\n<li><a style=\"color:orange; text-decoration:none; font-weight:800\" href='https://soheon-lee.github.io/blog-20200315-Django-Streaming-Part2/'> Django로 음악 스트리밍하기 PART2</a></li>\n</ul>\n<p>현재 진행중인 프로젝트에서는 database 로 연결되는 connection을 열고 닫을 때도 사용하고 있다.<br>\n그렇다면 이 기능의 정체는 무엇일까? 나만의 데이터도 with open으로 열 수 있을까?</p>\n<h1 id=\"python-with-\" style=\"position:relative;\"><a href=\"#python-with-\" aria-label=\"python with  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python ‘with’ ?</h1>\n<p>파이썬을 사용하는 사람이라면, 아래 구문이 꽤나 익숙할 것이다. with은 쉽게 말해 아래 구문을 <strong>한 단어로 합쳐놓은 것</strong>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">set</span> things up\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n  do something\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n  tear things down</code></pre></div>\n<p>여기서 <code class=\"language-text\">set things up</code> 구문은 파일을 여는 등의 명령인데, 열고 나서 <code class=\"language-text\">something</code>을 하고, 그 명령이 끝나고 나면, 결과 여부에 상관없이 (suceeded or not) <code class=\"language-text\">tear things down</code> 하라는 구문이다.<br>\n예를 들어, python에서 mysql.connector 라는 커넥터를 이용하여 데이터베이스와의 연결을 연다고 가정해보자.<br>\n(mysql에 관한 아래 설정은 무시해도 좋다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">db_connection <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span>connect\n  <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'database'</span><span class=\"token operator\">=</span>DATABASE<span class=\"token punctuation\">[</span><span class=\"token string\">'database'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'user'</span><span class=\"token operator\">=</span>DATABASE<span class=\"token punctuation\">[</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n  db_cursor <span class=\"token operator\">=</span> db_connection<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n  db_cursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ol>\n<li>데이터베이스 연결을 만든다 (연다).</li>\n<li>커서를 연결한다.</li>\n<li>커서를 닫는다.</li>\n</ol>\n<p>위의 코드는 파일을 열고 어떤 명령을 내리고 저걸 다시 닫는 단순 과정이다. 딱!! 함수화하기에 적당한 과정이 아닌가?</p>\n<h3 id=\"이-모든-과정을-한-번에-처리하기-위해-존재하는-것이-with이다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AA%A8%EB%93%A0-%EA%B3%BC%EC%A0%95%EC%9D%84-%ED%95%9C-%EB%B2%88%EC%97%90-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-with%EC%9D%B4%EB%8B%A4\" aria-label=\"이 모든 과정을 한 번에 처리하기 위해 존재하는 것이 with이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 모든 과정을 한 번에 처리하기 위해 존재하는 것이 ‘with’이다.</h3>\n<h1 id=\"객체-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%83%9D%EC%84%B1\" aria-label=\"객체 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 생성</h1>\n<p>파이썬의 거의 모든 자료형은 <strong>객체</strong>다. 어떤 객체를 <code class=\"language-text\">with</code>으로 열고 싶다면, 그 객체의 기본 메소드로 <code class=\"language-text\">__enter__</code>과 <code class=\"language-text\">__exit__</code>이 필요하다.</p>\n<h3 id=\"__enter__--객체가-열리자마자-실행\" style=\"position:relative;\"><a href=\"#__enter__--%EA%B0%9D%EC%B2%B4%EA%B0%80-%EC%97%B4%EB%A6%AC%EC%9E%90%EB%A7%88%EC%9E%90-%EC%8B%A4%ED%96%89\" aria-label=\"__enter__  객체가 열리자마자 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>__enter__ : 객체가 열리자마자 실행</h3>\n<h3 id=\"__exit__-객체가-닫힐때-실행\" style=\"position:relative;\"><a href=\"#__exit__-%EA%B0%9D%EC%B2%B4%EA%B0%80-%EB%8B%AB%ED%9E%90%EB%95%8C-%EC%8B%A4%ED%96%89\" aria-label=\"__exit__ 객체가 닫힐때 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>__exit__: 객체가 닫힐때 실행</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">contolled_execution</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__enter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">set</span> things up\n    <span class=\"token keyword\">return</span> thing\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__exit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> traceback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    tear things down\n\n<span class=\"token keyword\">with</span> controlled_execution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> thing<span class=\"token punctuation\">:</span>\n  some code using thing</code></pre></div>\n<p><code class=\"language-text\">with</code>구문이 실행되면, <strong>context manager</strong>이 자동으로 <code class=\"language-text\">__enter__</code> 메소드로 정의된 동작을 수행하고, 이 메소드의 결과로 반환하는 <code class=\"language-text\">return</code>값을 <code class=\"language-text\">as</code>를 사용해 things에 저장한다. Python이 코드의 다른 body 부분을 수행한 다음에는 그 결과가 어떠하든 (finally) <code class=\"language-text\">__exit__</code> 메소드를 실행하게 된다.<br>\n앞서 예시로 든 mysql database connection 에 이 방법을 적용해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DatabaseConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__enter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      self<span class=\"token punctuation\">.</span>cursor <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>db_connection<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span>buffered<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> dictionary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>cursor\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__exit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> exc_type<span class=\"token punctuation\">,</span> exc_value<span class=\"token punctuation\">,</span> exc_trance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndatabase_connection_cursor <span class=\"token operator\">=</span> DatabaseConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> database_connection_cursor <span class=\"token keyword\">as</span> db_cursor<span class=\"token punctuation\">:</span>\n    db_cursor<span class=\"token punctuation\">.</span>do_something</code></pre></div>\n<h1 id=\"file-객체는-어떤-모양인가\" style=\"position:relative;\"><a href=\"#file-%EA%B0%9D%EC%B2%B4%EB%8A%94-%EC%96%B4%EB%96%A4-%EB%AA%A8%EC%96%91%EC%9D%B8%EA%B0%80\" aria-label=\"file 객체는 어떤 모양인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>file 객체는 어떤 모양인가?</h1>\n<p>우리가 자주 with open 구문으로 사용하는 file 객체도 사실 뜯어보면 <code class=\"language-text\">__enter__</code>과 <code class=\"language-text\">__exit__</code>이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x.txt\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> f\n<span class=\"token operator\">&lt;</span><span class=\"token builtin\">open</span> <span class=\"token builtin\">file</span> <span class=\"token string\">'x.txt'</span><span class=\"token punctuation\">,</span> mode <span class=\"token string\">'r'</span> at <span class=\"token operator\">%</span><span class=\"token operator\">%</span><span class=\"token operator\">%</span><span class=\"token operator\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> f<span class=\"token punctuation\">.</span>__enter__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token builtin\">open</span> <span class=\"token builtin\">file</span> <span class=\"token string\">'x.txt'</span><span class=\"token punctuation\">,</span> mode <span class=\"token string\">'r'</span> at <span class=\"token operator\">%</span><span class=\"token operator\">%</span><span class=\"token operator\">%</span><span class=\"token operator\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> f<span class=\"token punctuation\">.</span>__exit__<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n<p>그래서 우리가 with file open을 사용할 수 있었다.</p>\n<hr>\n<p>이 방법을 사용하면 다양한 객체를 응용해서 사용할 수 있다. 하지만 이 방법… pymysql 모듈 쓰면 다 알아서 해준다… 있는 자료 잘 활용하는 법도 터득해보자 ..ㅎ…</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9D%B4-%EB%AA%A8%EB%93%A0-%EA%B3%BC%EC%A0%95%EC%9D%84-%ED%95%9C-%EB%B2%88%EC%97%90-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4-with%EC%9D%B4%EB%8B%A4\">이 모든 과정을 한 번에 처리하기 위해 존재하는 것이 ‘with’이다.</a></li>\n<li><a href=\"#__enter__--%EA%B0%9D%EC%B2%B4%EA%B0%80-%EC%97%B4%EB%A6%AC%EC%9E%90%EB%A7%88%EC%9E%90-%EC%8B%A4%ED%96%89\">__enter__ : 객체가 열리자마자 실행</a></li>\n<li><a href=\"#__exit__-%EA%B0%9D%EC%B2%B4%EA%B0%80-%EB%8B%AB%ED%9E%90%EB%95%8C-%EC%8B%A4%ED%96%89\">__exit__: 객체가 닫힐때 실행</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 05, 2020","title":"With as로 열 수 있는 파이썬 객체 생성하기","categories":"개발블로그","author":"이소헌","emoji":"👑"},"fields":{"slug":"/blog-20200405-With-as-Python-Object/"}},"site":{"siteMetadata":{"siteUrl":"https://www.zoomkoding.com","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/blog-20200217-Django-Connect-MySQL/","nextSlug":"","prevSlug":"/blog-20200405-With-as-Python-Object/"}},"staticQueryHashes":["1073350324","2938748437"]}